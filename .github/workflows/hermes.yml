name: Hermes Web and API Deployment

on:
  push:
    branches:
      - main

env:
  API_SERVICE: hermes-api
  WEB_SERVICE: hermes-web
  REGION: us-west1
  REGISTRY: us-west1-docker.pkg.dev
  API_IMAGE_NAME: us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/hermes/api
  WEB_IMAGE_NAME: us-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/hermes/web

jobs:
  build-deploy-to-google:
    name: Build and Deploy Images to Google Cloud
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: configure gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SVC_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GCP_SVC_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: configure docker
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      # - name: authenticate to google cloud
      #   id: auth
      #   uses: google-github-actions/auth@v1
      #   with:
      #     credentials_json: ${{ secrets.GCP_SVC_ACCOUNT_KEY }}

      - name: build docker images
        run: |
          docker build -f hermes-api.dockerfile -t ${{ env.API_IMAGE_NAME }}:latest .
          docker build -f hermes-web.dockerfile -t ${{ env.WEB_IMAGE_NAME }}:latest .
      
      - name: push docker images to google artifact registry
        run: |
          docker push ${{ env.API_IMAGE_NAME }}:latest
          docker push ${{ env.WEB_IMAGE_NAME }}:latest

      - name: deploy docker images to google cloud run
        run: |
          gcloud run deploy ${{ env.API_SERVICE }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --region ${{ env.REGION }} \
          --image ${{ env.API_IMAGE_NAME }} \
          --platform managed \
          --allow-unauthenticated
          gcloud run deploy ${{ env.WEB_SERVICE }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --region ${{ env.REGION }} \
          --image ${{ env.WEB_IMAGE_NAME }} \
          --platform managed \
          --allow-unauthenticated
        
      # - name: configure qemu
      #   uses: docker/setup-qemu-action@v2

      # - name: configure buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: authenticate docker to google container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: _json_key
      #     password: ${{ secrets.GCP_SVC_ACCOUNT_KEY }}

      # - name: extract api metadata
      #   id: apimeta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.API_IMAGE_NAME }}
      #     # generate Docker tags based on the following events/attributes
      #     # just generate "latest", and sha tags for now
      #     tags: |
      #       type=sha
      #       type=raw,value=latest,enable={{is_default_branch}}

      # - name: extract web metadata
      #   id: webmeta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.WEB_IMAGE_NAME }}
      #     # generate Docker tags based on the following events/attributes
      #     # just generate "latest", and sha tags for now
      #     tags: |
      #       type=sha
      #       type=raw,value=latest,enable={{is_default_branch}}
      
      # - name: build/deploy api to google container registry
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: hermes-api.dockerfile
      #     tags: ${{ steps.apimeta.outputs.tags }}
      #     labels: ${{ steps.apimeta.outputs.labels }}
      #     push: true
      
      # - name: build/deploy web to google container registry
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: hermes-web.dockerfile
      #     tags: ${{ steps.webmeta.outputs.tags }}
      #     labels: ${{ steps.webmeta.outputs.labels }}
      #     push: true

      # - name: deploy api to google cloud run
      #   uses: google-github-actions/deploy-cloudrun@v1
      #   with:
      #     image: ${{ env.API_IMAGE_NAME }}
      #     region: ${{ env.REGION }}
      #     service: hermes-api
      #     flags: --port=8080 --allow-unauthenticated --platform=managed

      # - name: deploy web to google cloud run
      #   uses: google-github-actions/deploy-cloudrun@v1
      #   with:
      #     image: ${{ env.WEB_IMAGE_NAME }}
      #     region: ${{ env.REGION }}
      #     service: hermes-web
      #     flags: --port=8080 --allow-unauthenticated --platform=managed


  # deploy-images-to-github:
  #   name: Deploy to GitHub Container Registry
  #   runs-on: ubuntu-latest
    
  #   permissions:
  #     contents: read
  #     packages: write
    
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3
      
  #     - name: Configure QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Configure Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Authenticate to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract Metadata for Docker
  #       id: apimeta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}
  #         # generate Docker tags based on the following events/attributes
  #         # just generate "latest", and sha tags for now
  #         tags: |
  #           type=sha
  #           type=raw,value=latest,enable={{is_default_branch}}

  #     - name: Extract Metadata for Docker
  #       id: webmeta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_NAME }}
  #         # generate Docker tags based on the following events/attributes
  #         # just generate "latest", and sha tags for now
  #         tags: |
  #           type=sha
  #           type=raw,value=latest,enable={{is_default_branch}}
      
  #     - name: Build and Push Api Image to GitHub Container Registry
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: hermes-api.dockerfile
  #         tags: ${{ steps.apimeta.outputs.tags }}
  #         labels: ${{ steps.apimeta.outputs.labels }}
  #         push: true
      
  #     - name: Build and Push Web Image to GitHub Container Registry
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: hermes-web.dockerfile
  #         tags: ${{ steps.webmeta.outputs.tags }}
  #         labels: ${{ steps.webmeta.outputs.labels }}
  #         push: true

  # deploy-images-to-gcr:
  #   name: Deploy images to Google Cloud Run
  #   runs-on: ubuntu-latest
  #   needs: deploy-images-to-github

  #   steps:
  #     - name: Authenticate to GCR
  #       uses: google-github-actions/auth@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_SVC_ACCOUNT_KEY }}

  #     - name: Deploy Api Container to GCR
  #       uses: google-github-actions/deploy-cloudrun@v1
  #       with:
  #         image: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}
  #         region: ${{ env.REGION }}
  #         service: hermes-api
  #         flags: --port=8080 --allow-unauthenticated --platform=managed
      
  #     - name: Deploy Web Container to GCR
  #       uses: google-github-actions/deploy-cloudrun
  #       with:
  #         image: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_NAME }}
  #         region: ${{ env.REGION }}
  #         service: hermes-web
  #         flags: --port=8080 --allow-unauthenticated --platform=managed
